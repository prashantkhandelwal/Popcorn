{
	"info": {
		"_postman_id": "d5423669-0caf-4d3c-9146-88356cff1698",
		"name": "Popcorn - Postman API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18172118"
	},
	"item": [
		{
			"name": "Search Movie - By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response to be JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Data property to be an object\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data).to.be.a(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Contains nodes property\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data.searchMovies.nodes).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($name: String!) {\r\n  searchMovies (moviename: $name ){\r\n      nodes {\r\n          id\r\n          originaltitle\r\n          title\r\n          overview\r\n          credits {\r\n            cast {\r\n                name\r\n            }\r\n        }\r\n    }\r\n  }\r\n}",
						"variables": "{\r\n  \"name\": \"iron\"\r\n}"
					}
				},
				"url": {
					"raw": "https://localhost:7098/graphql/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7098",
					"path": [
						"graphql",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Movie - By Name 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response to be JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Data property to be an object\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data).to.be.a(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Contains nodes property\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data.searchMovies.nodes).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query GetMovies($name: String!) {\r\n  searchMovies (where: { title: { eq: $name } }) {\r\n      nodes {\r\n          id\r\n          title\r\n          overview\r\n          originallanguage\r\n          productioncompanies {\r\n          name\r\n          origincountry\r\n        }\r\n        credits {\r\n          cast {\r\n            name\r\n            character\r\n          }\r\n          crew {\r\n            name\r\n            job\r\n          }\r\n        }\r\n    }\r\n  }\r\n}",
						"variables": "{\r\n  \"name\": \"Iron Man\"\r\n}"
					}
				},
				"url": {
					"raw": "https://localhost:7098/graphql/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7098",
					"path": [
						"graphql",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Movie - By Keywords",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($name: String!) {\r\n  moviesByKeywords (keywords: $name) {\r\n    nodes{\r\n      id\r\n      movies{\r\n        id\r\n        isadult\r\n        title\r\n        overview\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": "{\r\n  \"name\": \"fiction\"\r\n}"
					}
				},
				"url": {
					"raw": "https://localhost:7098/graphql/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7098",
					"path": [
						"graphql",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Movie - By Director",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response to be JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Data property to be an object\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data).to.be.a(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Contains nodes property\", function() {\r",
							"    let response = pm.response.json();\r",
							"    pm.expect(response.data.moviesByKeywords.nodes).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($name: String!) {\r\n  moviesByKeywords (keywords: $name) {\r\n    nodes{\r\n      id\r\n      movies{\r\n        id\r\n        isadult\r\n        title\r\n        overview\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": "{\r\n  \"name\": \"fiction\"\r\n}"
					}
				},
				"url": {
					"raw": "https://localhost:7098/graphql/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7098",
					"path": [
						"graphql",
						""
					]
				}
			},
			"response": []
		}
	]
}